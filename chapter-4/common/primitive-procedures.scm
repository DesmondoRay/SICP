;;; primitive procedures

(define primitive-procedures
  (list (list '* *)
        (list '+ +)
        (list '- -)
        (list '/ /)
        (list '< <)
        (list '<= <=)
        (list '= =)
        (list '> >)
        (list '>= >=)
		(list 'apply apply)
        (list 'abs abs)
        (list 'acos acos)
        (list 'append append)
        (list 'asin asin)
        (list 'assoc assoc)
        (list 'assq assq)
        (list 'assv assv)
        (list 'atan atan)
        (list 'boolean? boolean?)
        (list 'caaaar caaaar)
        (list 'caaadr caaadr)
        (list 'caaar caaar)
        (list 'caadar caadar)
        (list 'caaddr caaddr)
        (list 'caadr caadr)
        (list 'caar caar)
        (list 'cadaar cadaar)
        (list 'cadadr cadadr)
        (list 'cadar cadar)
        (list 'caddar caddar)
        (list 'cadddr cadddr)
        (list 'caddr caddr)
        (list 'cadr cadr)
        (list 'car car)
        (list 'cdaaar cdaaar)
        (list 'cdaadr cdaadr)
        (list 'cdaar cdaar)
        (list 'cdadar cdadar)
        (list 'cdaddr cdaddr)
        (list 'cdadr cdadr)
        (list 'cdar cdar)
        (list 'cddaar cddaar)
        (list 'cddadr cddadr)
        (list 'cddar cddar)
        (list 'cdddar cdddar)
        (list 'cddddr cddddr)
        (list 'cdddr cdddr)
        (list 'cddr cddr)
        (list 'cdr cdr)
        (list 'ceiling ceiling)
        (list 'char->integer char->integer)
        (list 'char-alphabetic? char-alphabetic?)
        (list 'char-ci<=? char-ci<=?)
        (list 'char-ci=? char-ci=?)
        (list 'char-ci>=? char-ci>=?)
        (list 'char-ci>? char-ci>?)
        (list 'char-downcase char-downcase)
        (list 'char-lower-case? char-lower-case?)
        (list 'char-numeric? char-numeric?)
        (list 'char-upcase char-upcase)
        (list 'char-upper-case? char-upper-case?)
        (list 'char-whitespace? char-whitespace?)
        (list 'char<=? char<=?)
        (list 'char=? char=?)
        (list 'char>=? char>=?)
        (list 'char>? char>?)
        (list 'char? char?)
        (list 'complex? complex?)
        (list 'cons cons)
        (list 'cos cos)
        (list 'display display)
        (list 'eq? eq?)
        (list 'equal? equal?)
        (list 'eqv? eqv?)
        (list 'eval eval)
        (list 'even? even?)
        (list 'exact? exact?)
        (list 'exp exp)
        (list 'expt expt)
        (list 'floor floor)
        (list 'for-each for-each)
        (list 'force force)
        (list 'gcd gcd)
        (list 'inexact? inexact?)
        (list 'integer->char integer->char)
        (list 'integer? integer?)
        (list 'lcm lcm)
        (list 'length length)
        (list 'list list)
        (list 'list->string list->string)
        (list 'list->vector list->vector)
        (list 'list-ref list-ref)
        (list 'list-tail list-tail)
        (list 'list? list?)
        (list 'log log)
        (list 'make-string make-string)
        (list 'make-vector make-vector)
        (list 'map map)
        (list 'max max)
        (list 'member member)
        (list 'memq memq)
        (list 'memv memv)
        (list 'min min)
        (list 'modulo modulo)
        (list 'negative? negative?)
        (list 'newline newline)
        (list 'not not)
        (list 'null? null?)
        (list 'number->string number->string)
        (list 'number? number?)
        (list 'odd? odd?)
        (list 'pair? pair?)
        (list 'positive? positive?)
        (list 'quotient quotient)
        (list 'rational? rational?)
        (list 'real? real?)
        (list 'remainder remainder)
        (list 'reverse reverse)
        (list 'round round)
		(list 'random random)
		(list 'runtime runtime)
        (list 'sin sin)
        (list 'sqrt sqrt)
        (list 'string string)
        (list 'string->list string->list)
        (list 'string->number string->number)
        (list 'string->symbol string->symbol)
        (list 'string-append string-append)
        (list 'string-ci<=? string-ci<=?)
        (list 'string-ci=? string-ci=?)
        (list 'string-ci>=? string-ci>=?)
        (list 'string-ci>? string-ci>?)
        (list 'string-copy string-copy)
        (list 'string-fill! string-fill!)
        (list 'string-length string-length)
        (list 'string-ref string-ref)
        (list 'string-set! string-set!)
        (list 'string<=? string<=?)
        (list 'string string)
        (list 'string=? string=?)
        (list 'string>=? string>=?)
        (list 'string>? string>?)
        (list 'string? string?)
        (list 'substring substring)
        (list 'symbol->string symbol->string)
        (list 'tan tan)
        (list 'truncate truncate)
        (list 'vector vector)
        (list 'vector->list vector->list)
        (list 'vector-fill! vector-fill!)
        (list 'vector-length vector-length)
        (list 'vector-ref vector-ref)
        (list 'vector-set! vector-set!)
        (list 'vector? vector?)
        (list 'write write)
        (list 'write-char write-char)
        (list 'zero? zero?)))

